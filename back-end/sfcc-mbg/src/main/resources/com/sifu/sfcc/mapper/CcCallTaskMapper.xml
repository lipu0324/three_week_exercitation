<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sifu.sfcc.mapper.CcCallTaskMapper">
  <resultMap id="BaseResultMap" type="com.sifu.sfcc.model.CcCallTask">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="filter" jdbcType="VARCHAR" property="filter" />
    <result column="agent" jdbcType="VARCHAR" property="agent" />
    <result column="remove_repetition" jdbcType="INTEGER" property="removeRepetition" />
    <result column="ivr_id" jdbcType="INTEGER" property="ivrId" />
    <result column="max_ring_time" jdbcType="VARCHAR" property="maxRingTime" />
    <result column="naire_id" jdbcType="BIGINT" property="naireId" />
    <result column="created_by" jdbcType="BIGINT" property="createdBy" />
    <result column="created_time" jdbcType="TIMESTAMP" property="createdTime" />
    <result column="action_id" jdbcType="BIGINT" property="actionId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, title, remark, status, filter, agent, remove_repetition, ivr_id, max_ring_time, 
    naire_id, created_by, created_time, action_id
  </sql>
  <select id="selectByExample" parameterType="com.sifu.sfcc.model.CcCallTaskExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from cc_call_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from cc_call_task
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from cc_call_task
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.sifu.sfcc.model.CcCallTaskExample">
    delete from cc_call_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sifu.sfcc.model.CcCallTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cc_call_task (title, remark, status, 
      filter, agent, remove_repetition, 
      ivr_id, max_ring_time, naire_id, 
      created_by, created_time, action_id
      )
    values (#{title,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, 
      #{filter,jdbcType=VARCHAR}, #{agent,jdbcType=VARCHAR}, #{removeRepetition,jdbcType=INTEGER}, 
      #{ivrId,jdbcType=INTEGER}, #{maxRingTime,jdbcType=VARCHAR}, #{naireId,jdbcType=BIGINT}, 
      #{createdBy,jdbcType=BIGINT}, #{createdTime,jdbcType=TIMESTAMP}, #{actionId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sifu.sfcc.model.CcCallTask">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into cc_call_task
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="title != null">
        title,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="filter != null">
        filter,
      </if>
      <if test="agent != null">
        agent,
      </if>
      <if test="removeRepetition != null">
        remove_repetition,
      </if>
      <if test="ivrId != null">
        ivr_id,
      </if>
      <if test="maxRingTime != null">
        max_ring_time,
      </if>
      <if test="naireId != null">
        naire_id,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="createdTime != null">
        created_time,
      </if>
      <if test="actionId != null">
        action_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="filter != null">
        #{filter,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        #{agent,jdbcType=VARCHAR},
      </if>
      <if test="removeRepetition != null">
        #{removeRepetition,jdbcType=INTEGER},
      </if>
      <if test="ivrId != null">
        #{ivrId,jdbcType=INTEGER},
      </if>
      <if test="maxRingTime != null">
        #{maxRingTime,jdbcType=VARCHAR},
      </if>
      <if test="naireId != null">
        #{naireId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionId != null">
        #{actionId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sifu.sfcc.model.CcCallTaskExample" resultType="java.lang.Long">
    select count(*) from cc_call_task
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update cc_call_task
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.title != null">
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.filter != null">
        filter = #{record.filter,jdbcType=VARCHAR},
      </if>
      <if test="record.agent != null">
        agent = #{record.agent,jdbcType=VARCHAR},
      </if>
      <if test="record.removeRepetition != null">
        remove_repetition = #{record.removeRepetition,jdbcType=INTEGER},
      </if>
      <if test="record.ivrId != null">
        ivr_id = #{record.ivrId,jdbcType=INTEGER},
      </if>
      <if test="record.maxRingTime != null">
        max_ring_time = #{record.maxRingTime,jdbcType=VARCHAR},
      </if>
      <if test="record.naireId != null">
        naire_id = #{record.naireId,jdbcType=BIGINT},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=BIGINT},
      </if>
      <if test="record.createdTime != null">
        created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.actionId != null">
        action_id = #{record.actionId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update cc_call_task
    set id = #{record.id,jdbcType=BIGINT},
      title = #{record.title,jdbcType=VARCHAR},
      remark = #{record.remark,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER},
      filter = #{record.filter,jdbcType=VARCHAR},
      agent = #{record.agent,jdbcType=VARCHAR},
      remove_repetition = #{record.removeRepetition,jdbcType=INTEGER},
      ivr_id = #{record.ivrId,jdbcType=INTEGER},
      max_ring_time = #{record.maxRingTime,jdbcType=VARCHAR},
      naire_id = #{record.naireId,jdbcType=BIGINT},
      created_by = #{record.createdBy,jdbcType=BIGINT},
      created_time = #{record.createdTime,jdbcType=TIMESTAMP},
      action_id = #{record.actionId,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sifu.sfcc.model.CcCallTask">
    update cc_call_task
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="filter != null">
        filter = #{filter,jdbcType=VARCHAR},
      </if>
      <if test="agent != null">
        agent = #{agent,jdbcType=VARCHAR},
      </if>
      <if test="removeRepetition != null">
        remove_repetition = #{removeRepetition,jdbcType=INTEGER},
      </if>
      <if test="ivrId != null">
        ivr_id = #{ivrId,jdbcType=INTEGER},
      </if>
      <if test="maxRingTime != null">
        max_ring_time = #{maxRingTime,jdbcType=VARCHAR},
      </if>
      <if test="naireId != null">
        naire_id = #{naireId,jdbcType=BIGINT},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=BIGINT},
      </if>
      <if test="createdTime != null">
        created_time = #{createdTime,jdbcType=TIMESTAMP},
      </if>
      <if test="actionId != null">
        action_id = #{actionId,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sifu.sfcc.model.CcCallTask">
    update cc_call_task
    set title = #{title,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      filter = #{filter,jdbcType=VARCHAR},
      agent = #{agent,jdbcType=VARCHAR},
      remove_repetition = #{removeRepetition,jdbcType=INTEGER},
      ivr_id = #{ivrId,jdbcType=INTEGER},
      max_ring_time = #{maxRingTime,jdbcType=VARCHAR},
      naire_id = #{naireId,jdbcType=BIGINT},
      created_by = #{createdBy,jdbcType=BIGINT},
      created_time = #{createdTime,jdbcType=TIMESTAMP},
      action_id = #{actionId,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>